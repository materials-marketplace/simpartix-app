---
openapi: 3.0.0

info:
    title: SimPARTIX MarketPlace app
    description: MarketPlace app for the SimPARTIX simulation software
    version: 1.0.5
    x-api-version: 0.3.0
    x-products:
        - name: Monthly
          productId:
servers:
    - url: https://simpartix.materials-data.space

paths:
  # Administrative paths
    /heartbeat:
        get:
            description: Returns a heartbeat
            operationId: heartbeat
            responses:
                '200':
                    description: Success

  # Transformation app paths
    /transformations:
        get:
            description: Get the List of Simulations
            operationId: getTransformationList
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    items:
                                        type: array
                                        example: [SimulationID-1, Simulation-2, '...']
        post:
            description: Initialize a Transformation
            operationId: newTransformation
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TransformationConfig'
            responses:
                '200':
                    description: Success
                    content:
                        resourceId:
                            schema:
                                type: string
                                example: 3e22541c-a95e-4443-8cdc-0866171d343b
                '400':
                    description: Bad Request
                    content:
                        resourceId:
                            schema:
                                type: string
                                example: Wrong configuration input

    /transformations/{transformation_id}/state:
        get:
            description: Get the state of a Transformation
            operationId: getTransformationState
            parameters:
                - in: path
                  name: transformation_id
                  schema:
                      type: string
                  required: true
            responses:
                '200':
                    description: Success
                    content:
                        state:
                            schema:
                                type: string
                                example: running
                '404':
                    description: Not found
                    content:
                        resourceId:
                            schema:
                                type: string
                                example: Simulation Not found
                '400':
                    description: Bad Request
                    content:
                        resourceId:
                            schema:
                                type: string
                                example: Unexpected error

    /transformations/{transformation_id}:
        delete:
            description: Delete the transformation
            operationId: deleteTransformation
            parameters:
                - in: path
                  name: transformation_id
                  schema:
                      type: string
                  required: true
            responses:
                '200':
                    description: Success
                    content:
                        status:
                            schema:
                                type: string
                                example: Deleted successfully
                '404':
                    description: Not found
                    content:
                        resourceId:
                            schema:
                                type: string
                                example: Simulation Not found
                '400':
                    description: Bad Request
                    content:
                        resourceId:
                            schema:
                                type: string
                                example: Simulation is in progress
        patch:
            description: Update the transformation state
            operationId: updateTransformation
            parameters:
                - in: path
                  name: transformation_id
                  schema:
                      type: string
                  required: true
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TransformationUpdate'
            responses:
                '200':
                    description: Success
                    content:
                        status:
                            schema:
                                type: string
                                example: Stopped successfully

  # dataSource endpoints
    /results:
        get:
            summary: Get a simulation's result
            operationId: getDataset
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DatasetQuery'
                required: true
            responses:
                '200':
                    description: Successful Response
                    content:
                        - vnd.sintef.dlite+json
                '422':
                    description: Validation Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
    /mappings:
        get:
            summary: Get a list of the available mappings
            operationId: listSemanticMappings
            responses:
                '200':
                    description: Successful Response
                    content:
                        application/json:
                            schema: {}
    /mappings/{semantic_mapping_id}:
        get:
            summary: Get a specific mapping
            operationId: getSemanticMapping
            parameters:
                - required: true
                  schema:
                      title: Semantic Mapping Id
                      type: string
                  name: semantic_mapping_id
                  in: path
            responses:
                '200':
                    description: Successful Response
                    content:
                        application/json:
                            schema: {}
                '422':
                    description: Validation Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HTTPValidationError'
components:
    schemas:
        DatasetQuery:
            title: DatasetQuery
            required:
                - collection_name
                - dataset_name
            type: object
            properties:
                collection_name:
                    title: Collection Name
                    maxLength: 255
                    minLength: 1
                    type: string
                dataset_name:
                    title: Dataset Name
                    minLength: 1
                    type: string
        HTTPValidationError:
            title: HTTPValidationError
            type: object
            properties:
                detail:
                    title: Detail
                    type: array
                    items:
                        $ref: '#/components/schemas/ValidationError'
        TransformationCreateResponse:
            title: TransformationCreateResponse
            required:
                - id
            type: object
            properties:
                id:
                    title: Id
                    type: string
                    format: uuid4
        TransformationInput:
            title: TransformationInput
            type: object
            properties:
                laserPower:
                    title: Laserpower
                    type: number
                    default: 150
                laserSpeed:
                    title: Laserspeed
                    type: number
                    default: 3
                sphereDiameter:
                    title: Spherediameter
                    type: number
                    default: 3.0e-05
                phi:
                    title: Phi
                    type: number
                    default: 0.7
                powderLayerHeight:
                    title: Powderlayerheight
                    type: number
                    default: 6.0e-05
        TransformationListResponse:
            title: TransformationListResponse
            required:
                - items
            type: object
            properties:
                items:
                    title: Items
                    type: array
                    items:
                        $ref: '#/components/schemas/TransformationModel'
        TransformationModel:
            title: TransformationModel
            required:
                - id
                - parameters
            type: object
            properties:
                id:
                    title: Id
                    type: string
                    format: uuid4
                parameters:
                    title: Parameters
                    type: object
                state:
                    $ref: '#/components/schemas/TransformationState'
        TransformationState:
            title: TransformationState
            enum:
                - CREATED
                - RUNNING
                - STOPPED
                - COMPLETED
                - FAILED
            type: string
            description: An enumeration.
        TransformationStateResponse:
            title: TransformationStateResponse
            required:
                - id
                - state
            type: object
            properties:
                id:
                    title: Id
                    type: string
                    format: uuid4
                state:
                    $ref: '#/components/schemas/TransformationState'
        TransformationUpdateModel:
            title: TransformationUpdateModel
            required:
                - state
            type: object
            properties:
                state:
                    title: State
                    enum:
                        - RUNNING
                        - STOPPED
                    type: string
        TransformationUpdateResponse:
            title: TransformationUpdateResponse
            required:
                - id
                - state
            type: object
            properties:
                id:
                    title: Id
                    type: string
                    format: uuid4
                state:
                    title: State
                    enum:
                        - RUNNING
                        - STOPPED
                    type: string
        ValidationError:
            title: ValidationError
            required:
                - loc
                - msg
                - type
            type: object
            properties:
                loc:
                    title: Location
                    type: array
                    items:
                        anyOf:
                            - type: string
                            - type: integer
                msg:
                    title: Message
                    type: string
                type:
                    title: Error Type
                    type: string
